/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.ekspedisi.view;

import java.util.List;
import com.ekspedisi.controller.EkspedisiController;
import com.ekspedisi.model.ModelEkspedisi;
import com.ekspedisi.model.ModelTabelEkspedisi;
import java.util.List;
import javax.swing.*;

/**
 *
 * @author Fauzanramaa
 */
public class EkspedisiView extends javax.swing.JFrame {
    private EkspedisiController controller;

    /**
     * Creates new form EkspedisiView
     */
    public EkspedisiView(EkspedisiController controller){
        this.controller=controller;
        initComponents();
        loadEkspedisiTable();
    }
    
    public EkspedisiView() {
        throw new UnsupportedOperationException("Not Supported yet.");
    }
    
    public void loadEkspedisiTable(){
        List<ModelEkspedisi> listEkspedisi= controller.getAllEkspedisi();
        ModelTabelEkspedisi tableModel=new ModelTabelEkspedisi(listEkspedisi);
        dataTable.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        beratField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ComboPengiriman = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        ComboPembayaran = new javax.swing.JComboBox<>();
        BtnSimpan = new javax.swing.JButton();
        btnBuang = new javax.swing.JButton();
        btnSegarkan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        ComboAsalTujuan = new javax.swing.JComboBox<>();
        btnUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Silaju Express Jakarta");
        setLocation(new java.awt.Point(400, 70));

        jLabel1.setText("Asal");

        jLabel2.setText("Asal");

        jLabel3.setText("Tujuan");

        jLabel4.setText("Berat");

        beratField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beratFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("kg");

        jLabel6.setText("Metode Pengiriman");

        ComboPengiriman.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SameDay", "NextDay", "Standard" }));
        ComboPengiriman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboPengirimanActionPerformed(evt);
            }
        });

        jLabel7.setText("Metode Pembayaran");

        ComboPembayaran.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tunai", "DFOD" }));

        BtnSimpan.setText("Simpan");
        BtnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSimpanActionPerformed(evt);
            }
        });

        btnBuang.setText("Buang");
        btnBuang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuangActionPerformed(evt);
            }
        });

        btnSegarkan.setText("Segarkan");
        btnSegarkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSegarkanActionPerformed(evt);
            }
        });

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dataTable);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("SiLaju Express Jakarta");

        ComboAsalTujuan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jakarta To Bogor", "Jakarta To Depok", "Jakarta To Tangerang", "Jakarta To Bekasi" }));
        ComboAsalTujuan.setMinimumSize(new java.awt.Dimension(84, 22));
        ComboAsalTujuan.setPreferredSize(new java.awt.Dimension(84, 22));
        ComboAsalTujuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboAsalTujuanActionPerformed(evt);
            }
        });

        btnUpdate.setText("Perbarui");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(62, 62, 62)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(107, 107, 107)
                                    .addComponent(ComboAsalTujuan, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel3)))
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel4))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(beratField)
                                        .addComponent(ComboPengiriman, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7)
                                        .addComponent(BtnSimpan))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(btnUpdate)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnSegarkan))
                                        .addComponent(ComboPembayaran, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel5))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(45, 45, 45)
                                    .addComponent(btnBuang)))
                            .addGap(83, 83, 83)))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(51, 51, 51)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(618, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(ComboAsalTujuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(beratField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(ComboPengiriman, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(ComboPembayaran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BtnSimpan)
                        .addComponent(btnUpdate))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSegarkan)
                        .addComponent(btnBuang)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(59, 59, 59)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(624, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ComboPengirimanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboPengirimanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboPengirimanActionPerformed

    private void beratFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beratFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_beratFieldActionPerformed

    private void BtnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSimpanActionPerformed
        String asaltujuan = ComboAsalTujuan.getSelectedItem().toString();
        int biayaAsalTujuan = 0;

        switch (asaltujuan) {
            case "Jakarta To Bogor":
                biayaAsalTujuan = 6000;
                break;
            case "Jakarta To Depok":
                biayaAsalTujuan = 3000;
                break;
            case "Jakarta To Tangerang":
                biayaAsalTujuan = 3500;
                break;
            case "Jakarta To Bekasi":
                biayaAsalTujuan = 2000;
                break;
            default:
                biayaAsalTujuan = 0;
        }

        // Ambil nilai berat dari TextField beratField
        float berat = Float.parseFloat(beratField.getText());

        // Ambil nilai dari ComboBox Pengiriman
        String pengiriman = ComboPengiriman.getSelectedItem().toString();
        int biayaPengiriman = 0;

        switch (pengiriman) {
            case "SameDay":
                biayaPengiriman = 10000;
                break;
            case "NextDay":
                biayaPengiriman = 8000;
                break;
            case "Standard":
                biayaPengiriman = 5000;
                break;
            default:
                biayaPengiriman = 0;
        }

        // Ambil nilai pembayaran dari ComboBox Pembayaran
        String pembayaran = ComboPembayaran.getSelectedItem().toString();

        // Hitung harga berdasarkan rumus
        int harga = (int) ((biayaAsalTujuan * berat) + biayaPengiriman);

        // Buat objek ModelEkspedisi
        ModelEkspedisi ekspedisi = new ModelEkspedisi();
        ekspedisi.setAsaldantujuan(asaltujuan);
        ekspedisi.setBerat(berat);
        ekspedisi.setPengiriman(pengiriman);
        ekspedisi.setPembayaran(pembayaran);
        ekspedisi.setHarga(harga);

        // Simpan data menggunakan controller
        controller.addEkspedisi(ekspedisi);

        // Muat ulang data di tabel
        loadEkspedisiTable();
        
    }//GEN-LAST:event_BtnSimpanActionPerformed

    private void btnBuangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuangActionPerformed
        // TODO add your handling code here:
            JTextField idField = new JTextField(5);

        // Membuat panel untuk menampung JTextField
        JPanel panel = new JPanel();
        panel.add(new JLabel("Masukkan ID yang ingin dihapus:"));
        panel.add(idField);

        // Menampilkan dialog box dengan JTextField, tombol OK, dan Cancel
        int result = JOptionPane.showConfirmDialog(null, panel, 
            "Hapus Data Customer", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        // Jika tombol OK ditekan
        if (result == JOptionPane.OK_OPTION) {
            try {
                // Mengambil input ID dan memanggil metode deleteMhs
                int id = Integer.parseInt(idField.getText());
                controller.deleteEkspedisi(id);
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus.", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            } catch (NumberFormatException e) {
                // Menangani error jika ID yang dimasukkan bukan angka
                JOptionPane.showMessageDialog(null, "ID harus berupa angka.", "Error", JOptionPane.ERROR_MESSAGE);
            }
    }
    }//GEN-LAST:event_btnBuangActionPerformed

    private void btnSegarkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSegarkanActionPerformed
        // TODO add your handling code here:
        loadEkspedisiTable();
    }//GEN-LAST:event_btnSegarkanActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
          List<ModelEkspedisi> listEkspedisi = controller.getAllEkspedisi();
    ModelTabelEkspedisi tableModel = (ModelTabelEkspedisi) dataTable.getModel();

    // Memeriksa apakah ada baris yang dipilih
    if (dataTable.getSelectedRowCount() == 1) {
        int selectedRow = dataTable.getSelectedRow();
        
        // Mendapatkan nilai dari input
        String AsalTujuan = ComboAsalTujuan.getSelectedItem().toString();
        float berat = Float.parseFloat(beratField.getText());
        String Pengiriman = ComboPengiriman.getSelectedItem().toString();
        String Pembayaran = ComboPembayaran.getSelectedItem().toString();
        
        // Hitung ulang biaya berdasarkan data baru
        int biayaAsalTujuan = 0;
        switch (AsalTujuan) {
            case "Jakarta To Bogor":
                biayaAsalTujuan = 6000;
                break;
            case "Jakarta To Depok":
                biayaAsalTujuan = 3000;
                break;
            case "Jakarta To Tangerang":
                biayaAsalTujuan = 3500;
                break;
            case "Jakarta To Bekasi":
                biayaAsalTujuan = 2000;
                break;
            default:
                biayaAsalTujuan = 0;
        }

        int biayaPengiriman = 0;
        switch (Pengiriman) {
            case "SameDay":
                biayaPengiriman = 10000;
                break;
            case "NextDay":
                biayaPengiriman = 8000;
                break;
            case "Standard":
                biayaPengiriman = 5000;
                break;
            default:
                biayaPengiriman = 0;
        }

        // Hitung ulang harga
        int harga = (int) ((biayaAsalTujuan * berat) + biayaPengiriman);

        // Memperbarui data pada list
        ModelEkspedisi updatedEkspedisi = listEkspedisi.get(selectedRow);
        updatedEkspedisi.setAsaldantujuan(AsalTujuan);
        updatedEkspedisi.setBerat(berat);
        updatedEkspedisi.setPengiriman(Pengiriman);
        updatedEkspedisi.setPembayaran(Pembayaran);
        updatedEkspedisi.setHarga(harga); // Memperbarui harga

        // Memperbarui data pada model tabel
        tableModel.setValueAt(AsalTujuan, selectedRow, 0);
        tableModel.setValueAt(berat, selectedRow, 1);
        tableModel.setValueAt(Pengiriman, selectedRow, 2);
        tableModel.setValueAt(Pembayaran, selectedRow, 3);
        tableModel.setValueAt(harga, selectedRow, 4); // Tambahkan harga ke kolom tabel

        // Memanggil fungsi untuk menyimpan perubahan (opsional)
        controller.updateEkspedisi(updatedEkspedisi);

        JOptionPane.showMessageDialog(this, "Berhasil Perbarui..");
    } else {
        if (dataTable.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Tabel Kosong..");
        } else {
            JOptionPane.showMessageDialog(this, "Silahkan Pilih Salah Satu Baris");
        }
    }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void dataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataTableMouseClicked
        // TODO add your handling code here:
       int selectedRow = dataTable.getSelectedRow();
    
    if (selectedRow != -1) {
        // Ambil model tabel yang digunakan untuk dataTable
        ModelTabelEkspedisi tableModel = (ModelTabelEkspedisi) dataTable.getModel();

        // Ambil nilai dari sel yang dipilih sesuai dengan kolom
        String tblid = tableModel.getValueAt(selectedRow, 0).toString();
        String tblasaldantujuan = tableModel.getValueAt(selectedRow, 1).toString();
        String tblberat = tableModel.getValueAt(selectedRow, 2).toString();
        String tblharga = tableModel.getValueAt(selectedRow, 3).toString();
        String tblpembayaran = tableModel.getValueAt(selectedRow, 4).toString();
        String tblpengiriman = tableModel.getValueAt(selectedRow, 5).toString();

        // Isi data ke komponen form
        ComboAsalTujuan.setSelectedItem(tblasaldantujuan);
        beratField.setText(tblberat);
        ComboPengiriman.setSelectedItem(tblpengiriman);
        ComboPembayaran.setSelectedItem(tblpembayaran);
        }
    }//GEN-LAST:event_dataTableMouseClicked

    private void ComboAsalTujuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboAsalTujuanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboAsalTujuanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EkspedisiView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EkspedisiView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EkspedisiView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EkspedisiView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EkspedisiView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnSimpan;
    private javax.swing.JComboBox<String> ComboAsalTujuan;
    private javax.swing.JComboBox<String> ComboPembayaran;
    private javax.swing.JComboBox<String> ComboPengiriman;
    private javax.swing.JTextField beratField;
    private javax.swing.JButton btnBuang;
    private javax.swing.JButton btnSegarkan;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTable dataTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
